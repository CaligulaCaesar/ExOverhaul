### NOTES:

# ai_allow fields for upgrades should be as simple as possible. What I suggest is this:

# 	ai_allow = { 
#		tile = {
#			OR = {
#				has_building = building_power_plant_1
#				has_building = building_power_plant_1_direct_build
#			}
#		}
#	}
#
# Of course, the above example is for the ai_allow field that should appear on building_power_plant_2, but I'm sure you get the idea.
# 
# At the same time that you add this ai_allow field to upgrade buildings, you should also add to the ai_allow of all direct build version a prohibition to build on tiles with buildings of the same type. For example:
#	ai_allow = {
#		tile = {
#			OR = {
#				AND = {
#					has_energy = yes
#					has_vanilla_or_exoverhaul_strategic_resources = no
#					NOR = {
#						has_building = building_power_plant_1						
#						has_building = building_power_plant_3
#						has_building = building_power_plant_4
#						has_building = building_power_plant_5
#						has_building = building_power_plant_rw
#						has_building = building_power_plant_1_direct_build						
#						has_building = building_power_plant_3_direct_build
#						has_building = building_power_plant_4_direct_build
#						has_building = building_power_plant_5_direct_build
#						has_building = building_power_plant_rw_direct_build
#					}	
#				}
#				AND = {
#					has_vanilla_or_exoverhaul_strategic_resources = no
#					has_energy = no
#					has_minerals = no
#					has_research_resources = no
#					NOR = {
#						has_building = building_power_plant_1						
#						has_building = building_power_plant_3
#						has_building = building_power_plant_4
#						has_building = building_power_plant_5
#						has_building = building_power_plant_rw
#						has_building = building_power_plant_1_direct_build						
#						has_building = building_power_plant_3_direct_build
#						has_building = building_power_plant_4_direct_build
#						has_building = building_power_plant_5_direct_build
#						has_building = building_power_plant_rw_direct_build
#					}	
#				}
#			}
#		}
#	}
#
# The new content in the above statement is the two NOR fields and everything within them. You can of course make this into a scripted trigger, to be more elegant. 
#
# Lab buildings are a bit different from the other resource buildings, because building_basic_lab_1 can upgrade into 3 different building chains. Therefore, the t1 building of each chain - even the upgrade version, should retain the full ai weights. 

	

# These are the ai_allow and ai_weight fields for non-listed power plant upgrades:

	ai_allow = { 
		tile = { has_building = building_basic_power_plant }   
	} 
	
	ai_weight = {
		weight = @important				
		modifier = {
			factor = @increase_interest_2
			tile = {
				OR = { 
					owner = { has_authority = auth_machine_intelligence }
					has_energy_bonus_pop = yes
					has_free_sapient_robot = yes
					AND = {
						owner = { has_global_flag = "ex_robots_active" }
						has_robot_pop = yes						
					}					
					any_neighboring_tile = { has_hyperstorage_building = yes }
					any_neighboring_tile = { has_capital_building = yes }
					AND = {
						owner = { has_global_flag = "ex_resources_active" }
						any_neighboring_tile = { has_building_sr_engos_2 = yes }
					}					
				}					
			}
		}
		modifier = {
			factor = @increase_interest_1
			planet = { has_modifier = "strong_magnetic_field" }
		}
		modifier = {
			factor = @increase_interest_3
			OR = {
				planet = { has_modifier = "hazardous_weather" }
				AND = {
					owner = { has_global_flag = "legw_active" }
					planet = {
						OR = {
							has_modifier = "solar_planet"
							has_modifier = "rift_planet"
						}
					}
				}
				guilli_energy_modifiers = yes
			}
		}
		modifier = {
			factor = @crucial_1
			owner = { has_country_flag = is_energy_starved }
		}
		modifier = {
			factor = @crucial_2
			AND = {
				owner = { has_global_flag = "legw_active" }
				planet = { has_modifier = "golden_city" }
			}
		}
	}

# These are the ai_allow and ai_weight fields for non-listed mine upgrades:

	ai_allow = { 
		tile = { has_building = building_basic_mine }   
	} 

	
	ai_weight = {
		weight = @important
		modifier = {
			factor = @reduce_interest_2
			OR = {
				planet = { has_modifier = "mineral_poor" }
				guilli_negative_mineral_modifiers = yes
			}
		}
		modifier = {
			factor = @increase_interest_2
			OR = {
				tile = {
					OR = {
						has_robot_pop = yes
						has_slave_pop = yes
						has_prole_or_stapled_pop = yes				
						has_mineral_bonus_pop = yes
						any_neighboring_tile = { has_hyperstorage_building = yes }
						any_neighboring_tile = { has_capital_building = yes }						
						AND = {
							owner = { has_global_flag = "ex_resources_active" }
							tile = {
								any_neighboring_tile = {
									OR = {
										has_building_sr_ex_planetary_1 = yes
										has_building_sr_engos_2 = yes
									}
								}
							}
						}
					}	
				}	
				planet = {
					OR = {
						has_modifier = "extensive_moon_system"
						has_modifier = "carbon_world"
						has_modifier = "mineral_rich"
						has_modifier = "asteroid_belt"
					}
				}					
			}
		}
		modifier = {
			factor = @increase_interest_3
			OR = {
				planet = { has_modifier = "ultra_rich" } 
				guilli_positive_mineral_modifiers = yes
				AND = {
					owner = { has_global_flag = "legw_active" }
					planet = {
						OR = {
							has_modifier = "lava_planet"
							has_modifier = "mine_cold"
							has_modifier = "auto_mining"
						}
					}
				}
			}
		}
		modifier = {
			factor = @crucial_1
			owner = { has_country_flag = is_minerals_starved }
		}
	}
	
# These are the ai_allow and ai_weight fields for non-listed hydrophonics upgrades:

	ai_allow = { 
		tile = { has_building = building_basic_farm }   
	} 

	ai_weight = {
		weight = @important
		modifier = {
			factor = @increase_interest_1
			tile = { 
				OR = {
					has_slave_pop = yes
					has_prole_or_stapled_pop = yes
					has_food_bonus_pop = yes
					any_neighboring_tile = { has_hyperstorage_building = yes } 
					any_neighboring_tile = { has_capital_building = yes }
				}
			}	
		}
		modifier = {
			factor = @increase_interest_2
			OR = {
				planet = { has_modifier = "lush_planet" }
				guilli_positive_food_modifiers = yes
			}	
		}
		modifier = {
			factor = @reduce_interest_2
			OR = {
				planet = { has_modifier = "bleak_planet" }
				guilli_negative_food_modifiers = yes
			}	
		}
		modifier = {
			factor = @crucial_1
			owner = { has_country_flag = is_food_starved }
		}
		modifier = {
			factor = @crucial_2
			AND = {
				owner = { has_global_flag = "legw_active" }
				planet = { has_modifier = "food_corn" }
			}
		}
	}


### Labs

# Lab buildings are a bit different from the other resource buildings, because building_basic_lab_1 can upgrade into 3 different building chains. Therefore, the t1 building of each chain - even the upgrade version, should retain the full ai weights. 

	ai_allow = { 
		tile = { has_building = building_basic_lab_1 }   
	} 

### adjusted ai_weight only for t2/t3/t4/rw lab buildings:

## Engineering:

	ai_weight = {
		weight = @important
		modifier = {
			factor = @avoid
			tile = {
				OR = {
					has_slave_pop = yes
					has_prole_or_stapled_pop = yes
					has_non_sapient_robot = yes
				}
			}
		}
		modifier = {
			factor = @increase_interest_2
			OR = {
				tile = { 
					any_neighboring_tile = { has_polytechnic_building = yes }
					has_research_bonus_pop = yes
					has_free_sapient_robot = yes
					AND = {
					exists = pop
					pop = { has_trait = "trait_natural_engineers" }
				}				
				planet = { has_modifier = "unstable_tectonics" }
				guilli_engineering_modifiers = yes
				AND = {
					owner = { has_global_flag = "legw_active" }
					planet = {
						OR = {
							has_modifier = "art_planet"
							has_modifier = "core_planet"
						}
					}
				}
			}
		}
		modifier = {
			factor = @crucial_1
			AND = {
				owner = { has_global_flag = "legw_active" }
				planet = {
					OR = {
						has_modifier = "ancient_planet"
						has_modifier = "timeshift_fast"
						has_modifier = "rift_planet"
					}
				}
			}
		}
	}

## Physics:

	ai_weight = {
		weight = @important
		modifier = {
			factor = @avoid
			tile = {
				OR = {
					has_slave_pop = yes
					has_prole_or_stapled_pop = yes
					has_non_sapient_robot = yes
				}
			}
		}
		modifier = {
			factor = @increase_interest_2
			OR = {
				tile = {
					OR = {
						any_neighboring_tile = { has_polytechnic_building = yes }
						has_research_bonus_pop = yes
						has_free_sapient_robot = yes
						AND = {
							exists = pop
							pop = {	has_trait = "trait_natural_physicists" }
						}
					}	
				}
				planet = { has_modifier = "wild_storms" }
				OR = {
					guilli_physics_modifiers = yes
					AND = {
						owner = { has_global_flag = "legw_active" }
						planet = {
							OR = {
								has_modifier = "core_planet"
								has_modifier = "timeshift_slow"
							}
						}
					}
				}
			}
		}	
		modifier = {
			factor = @crucial_1
			AND = {
				owner = { has_global_flag = "legw_active" }
				planet = {
					OR = {
						has_modifier = "ancient_planet"
						has_modifier = "timeshift_fast"
						has_modifier = "rift_planet"
					}
				}
			}
		}
	}
	
## Society:	

	ai_weight = {
		weight = @important
		modifier = {
			factor = @avoid
			tile = {
				OR = {
					has_slave_pop = yes
					has_prole_or_stapled_pop = yes
					has_non_sapient_robot = yes
				}
			}
		}
		modifier = {
			factor = @increase_interest_2
			OR = {
				tile = { 
					OR = {
						any_neighboring_tile = { has_polytechnic_building = yes } 
						has_research_bonus_pop = yes
						has_free_sapient_robot = yes
						AND = {
							exists = pop
							pop = {	has_trait = "trait_natural_sociologists" }
						}	
					}	
				}	
			guilli_society_modifiers = yes
			planet = {
				OR = {
					has_modifier = "dangerous_wildlife"
					has_modifier = "titanic_life"
					has_modifier = "atmospheric_hallucinogen"
					has_modifier = "atmospheric_hallucinogen_good"					
				}
			}							
		}
		modifier = {
			factor = @crucial_1
			AND = {
				owner = { has_global_flag = "legw_active" }
				planet = {
					OR = {
						has_modifier = "ancient_planet"
						has_modifier = "timeshift_fast"
					}
				}
			}
		}
	}
	
### Capitals and planet uniques, including power-nexus/mineral-processing 2/hospital/assembly palnt/hyperstorage facilities and unity buildings

# Capitals/planet uniques are really easy. Since these buildings are planet unique there is no need to change the direct build versions at all. The upgrade versions should have a simplified ai_allow field: 

For example:

	ai_allow = { tile = { has_building = building_colony_shelter } } # this is for capital 1 of course
	
	ai_allow = { tile = { has_building = building_clinic } } # this is for the gene hospital building

# AI weights for direct build version should remain the same, but for upgrade versions this is sufficent:
	
	ai_weight = { weight = @crucial_2 }
	
	